@{ 

}


<h2 class="pageTitle">Cool Stats.</h2>

<p>Descrioption sadd nasjhbd cv ablsbalbas lasbd oasjnc jnsxacjkasn jkncsdjkc ndsfn ksdnfkdjs nasn cbas jchxbjc xz</p>


<!--Cool Stats-->
<div id="statsSection">

    <h2>Cool Stats here::</h2>

    <p>Descrioption sadd nasjhbd cv ablsbalbas lasbd oasjnc jnsxacjkasn jkncsdjkc ndsfn ksdnfkdjs nasn cbas jchxbjc xz</p>

    <p>First conversion: <span class="numbers">@ViewData["FirstDate"]</span></p>
    <p>Latest conversion: <span class="numbers">@ViewData["LastDate"]</span></p>
    <p>Total conversions: <span class="numbers">@ViewData["TotalConverstions"]</span></p>


    <h3>The foreground color occurances for all converted themes.</h3>

    <div class="chart-container">
        <canvas id="foregroundChart"></canvas>
    </div>

    <script>
        Chart.defaults.global.animation.duration = 2500;
        Chart.defaults.global.defaultFontSize = 15;
        Chart.defaults.global.defaultFontFamily = "'Raleway', sans-serif";
        Chart.defaults.global.defaultFontColor = "#666";

        var foregroundValues = [];
        foregroundValues[0] = '@(((int[])ViewData["ForegroundOccurences"])[0])';
        foregroundValues[1] = '@(((int[])ViewData["ForegroundOccurences"])[1])';
        foregroundValues[2] = '@(((int[])ViewData["ForegroundOccurences"])[2])';
        foregroundValues[3] = '@(((int[])ViewData["ForegroundOccurences"])[3])';
        foregroundValues[4] = '@(((int[])ViewData["ForegroundOccurences"])[4])';
        foregroundValues[5] = '@(((int[])ViewData["ForegroundOccurences"])[5])';
        foregroundValues[6] = '@(((int[])ViewData["ForegroundOccurences"])[6])';
        foregroundValues[7] = '@(((int[])ViewData["ForegroundOccurences"])[7])';
        foregroundValues[8] = '@(((int[])ViewData["ForegroundOccurences"])[8])';
        foregroundValues[9] = '@(((int[])ViewData["ForegroundOccurences"])[9])';
        foregroundValues[10] = '@(((int[])ViewData["ForegroundOccurences"])[10])';
        foregroundValues[11] = '@(((int[])ViewData["ForegroundOccurences"])[11])';
        foregroundValues[12] = '@(((int[])ViewData["ForegroundOccurences"])[12])';

        var ctx = document.getElementById('foregroundChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Pink', 'Purple', 'Blue', 'Cyan', 'Teal', 'Green', 'Yellow', 'Orange', 'Brown', 'White', 'Gray', 'Black'],

                datasets: [{
                    label: 'Color occurences',
                    data: foregroundValues,
                    backgroundColor: [
                        'rgba(185, 0, 23, 0.2)',
                        'rgba(229, 0, 137, 0.2)',
                        'rgba(118, 0, 150, 0.2)',
                        'rgba(0, 24, 174, 0.2)',
                        'rgba(0, 235, 228, 0.2)',
                        'rgba(0, 156, 139, 0.2)',
                        'rgba(12, 168, 0, 0.2)',
                        'rgba(211, 204, 0, 0.2)',
                        'rgba(218, 100, 0, 0.2)',
                        'rgba(90, 45, 0, 0.2)',
                        'rgba(192, 192, 192, 0.2)',
                        'rgba(128, 128, 128, 0.2)',
                        'rgba(0, 0, 0, 0.2)'
                    ],
                    borderColor: [
                        'rgba(185, 0, 23, 0.8)',
                        'rgba(229, 0, 137, 0.8)',
                        'rgba(118, 0, 150, 0.8)',
                        'rgba(0, 24, 174, 0.8)',
                        'rgba(0, 235, 228, 0.8)',
                        'rgba(0, 156, 139, 0.8)',
                        'rgba(12, 168, 0, 0.8)',
                        'rgba(211, 204, 0, 0.8)',
                        'rgba(218, 100, 0, 0.8)',
                        'rgba(90, 45, 0, 0.8)',
                        'rgba(192, 192, 192, 0.8)',
                        'rgba(128, 128, 128, 0.8)',
                        'rgba(0, 0, 0, 0.8)'
                    ],
                    hoverBorderColor: [
                        'rgba(185, 0, 23, 1)',
                        'rgba(229, 0, 137, 1)',
                        'rgba(118, 0, 150, 1)',
                        'rgba(0, 24, 174, 1)',
                        'rgba(0, 235, 228, 1)',
                        'rgba(0, 156, 139, 1)',
                        'rgba(12, 168, 0, 1)',
                        'rgba(211, 204, 0, 1)',
                        'rgba(218, 100, 0, 1)',
                        'rgba(90, 45, 0, 1)',
                        'rgba(192, 192, 192, 1)',
                        'rgba(128, 128, 128, 1)',
                        'rgba(0, 0, 0, 1)'
                    ],
                    borderWidth: 1,
                    hoverBorderWidth: 1.5
                }]
            },
            options: {
                maintainAspectRatio: false,
                legend: {
                    display: false,
                },
                scales: {
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Occurrences'
                        }
                    }]
                }
            }
        });

    </script>

    <h3>The background color occurances for all converted themes.</h3>

    <div class="chart-container">
        <canvas id="backgroundChart"></canvas>
    </div>

    <script>

        var backgroundValues = [];
        backgroundValues[0] = '@(((int[])ViewData["BackgroundOccurences"])[0])';
        backgroundValues[1] = '@(((int[])ViewData["BackgroundOccurences"])[1])';
        backgroundValues[2] = '@(((int[])ViewData["BackgroundOccurences"])[2])';
        backgroundValues[3] = '@(((int[])ViewData["BackgroundOccurences"])[3])';
        backgroundValues[4] = '@(((int[])ViewData["BackgroundOccurences"])[4])';
        backgroundValues[5] = '@(((int[])ViewData["BackgroundOccurences"])[5])';
        backgroundValues[6] = '@(((int[])ViewData["BackgroundOccurences"])[6])';
        backgroundValues[7] = '@(((int[])ViewData["BackgroundOccurences"])[7])';
        backgroundValues[8] = '@(((int[])ViewData["BackgroundOccurences"])[8])';
        backgroundValues[9] = '@(((int[])ViewData["BackgroundOccurences"])[9])';
        backgroundValues[10] = '@(((int[])ViewData["BackgroundOccurences"])[10])';
        backgroundValues[11] = '@(((int[])ViewData["BackgroundOccurences"])[11])';
        backgroundValues[12] = '@(((int[])ViewData["BackgroundOccurences"])[12])';

        var ctx = document.getElementById('backgroundChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Red', 'Pink', 'Purple', 'Blue', 'Cyan', 'Teal', 'Green', 'Yellow', 'Orange', 'Brown', 'White', 'Gray', 'Black'],
                datasets: [{
                    label: 'Color occurences',
                    data: backgroundValues,
                    backgroundColor: [
                        'rgba(185, 0, 23, 0.2)',
                        'rgba(229, 0, 137, 0.2)',
                        'rgba(118, 0, 150, 0.2)',
                        'rgba(0, 24, 174, 0.2)',
                        'rgba(0, 235, 228, 0.2)',
                        'rgba(0, 156, 139, 0.2)',
                        'rgba(12, 168, 0, 0.2)',
                        'rgba(211, 204, 0, 0.2)',
                        'rgba(218, 100, 0, 0.2)',
                        'rgba(90, 45, 0, 0.2)',
                        'rgba(192, 192, 192, 0.2)',
                        'rgba(128, 128, 128, 0.2)',
                        'rgba(0, 0, 0, 0.2)'
                    ],
                    borderColor: [
                        'rgba(185, 0, 23, 0.8)',
                        'rgba(229, 0, 137, 0.8)',
                        'rgba(118, 0, 150, 0.8)',
                        'rgba(0, 24, 174, 0.8)',
                        'rgba(0, 235, 228, 0.8)',
                        'rgba(0, 156, 139, 0.8)',
                        'rgba(12, 168, 0, 0.8)',
                        'rgba(211, 204, 0, 0.8)',
                        'rgba(218, 100, 0, 0.8)',
                        'rgba(90, 45, 0, 0.8)',
                        'rgba(192, 192, 192, 0.8)',
                        'rgba(128, 128, 128, 0.8)',
                        'rgba(0, 0, 0, 0.8)'
                    ], 
                    hoverBorderColor: [
                        'rgba(185, 0, 23, 1)',
                        'rgba(229, 0, 137, 1)',
                        'rgba(118, 0, 150, 1)',
                        'rgba(0, 24, 174, 1)',
                        'rgba(0, 235, 228, 1)',
                        'rgba(0, 156, 139, 1)',
                        'rgba(12, 168, 0, 1)',
                        'rgba(211, 204, 0, 1)',
                        'rgba(218, 100, 0, 1)',
                        'rgba(90, 45, 0, 1)',
                        'rgba(192, 192, 192, 1)',
                        'rgba(128, 128, 128, 1)',
                        'rgba(0, 0, 0, 1)'
                    ],
                    borderWidth: 1,
                    hoverBorderWidth: 1.5
                }]
            },
            options: {
                maintainAspectRatio: false,
                legend: {
                    display: false,
                },
                scales: {
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Occurrences',                            
                        },
                        
                    }]
                }
            },
               plugins: [{
                   beforeDraw: function (c) {
                       /*
                       var chartHeight = c.chart.height;
                       c.scales['y-axis-0'].options.ticks.minor.fontSize = (chartHeight -10) * 3.5 / 100; //fontSize: 6% of canvas height
                       var chartWidth = c.chart.width;
                       c.scales['x-axis-0'].options.ticks.minor.fontSize = (chartHeight - 10) * 3.5 / 100; //fontSize: 6% of canvas height
                       */
                   }
            }]
        });

    </script>







</div>

